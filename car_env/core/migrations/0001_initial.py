# Generated by Django 2.2.10 on 2020-03-29 16:15

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_vendor', models.BooleanField(default=False)),
                ('mobile', models.CharField(max_length=10)),
                ('mobile_verified', models.BooleanField(default=False)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='airport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('placeid', models.CharField(max_length=100)),
                ('pickup', models.BooleanField(default=0)),
                ('drop', models.BooleanField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Airports',
            },
        ),
        migrations.CreateModel(
            name='assign_vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commission', models.FloatField()),
                ('datetime', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='')),
                ('h2', models.CharField(max_length=256)),
                ('h5', models.CharField(max_length=256)),
            ],
            options={
                'verbose_name_plural': 'Main Page Banners',
            },
        ),
        migrations.CreateModel(
            name='calc_attr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
                ('active', models.BooleanField(default=True)),
                ('value', models.FloatField(blank=True, null=True)),
                ('is_multiplied', models.BooleanField(default=True)),
                ('is_time_dependent', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Calculator Required Fields',
            },
        ),
        migrations.CreateModel(
            name='calc_city_attr_value',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
            ],
            options={
                'verbose_name_plural': 'Fares/Taxes between 2 cities',
            },
        ),
        migrations.CreateModel(
            name='car_attr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Car Attributes',
            },
        ),
        migrations.CreateModel(
            name='car_attr_comparison',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Car Attribute Comparison Values',
            },
        ),
        migrations.CreateModel(
            name='car_types',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
            ],
            options={
                'verbose_name_plural': 'Car Types',
            },
        ),
        migrations.CreateModel(
            name='city',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='City Name')),
                ('state', models.CharField(max_length=100)),
                ('pickup', models.BooleanField(default=True)),
                ('drop', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Contact Us',
            },
        ),
        migrations.CreateModel(
            name='expected_time_hault',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ride_time', models.IntegerField(verbose_name='Ride Time in Hours')),
                ('hault_time', models.IntegerField(verbose_name='Hault time to be added in Minutes')),
            ],
            options={
                'verbose_name_plural': 'Hault Time in Expected Journey Timme',
            },
        ),
        migrations.CreateModel(
            name='faq',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('answer', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'FAQs',
            },
        ),
        migrations.CreateModel(
            name='final_ride_detail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_datetime', models.DateTimeField(blank=True, null=True)),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('placeid', models.CharField(max_length=100)),
                ('pickup', models.BooleanField(default=0)),
                ('drop', models.BooleanField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Locations',
            },
        ),
        migrations.CreateModel(
            name='payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('txn_id', models.CharField(max_length=100)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('amount', models.FloatField()),
                ('mode', models.CharField(max_length=56)),
            ],
        ),
        migrations.CreateModel(
            name='ride_booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('phone_no', models.CharField(max_length=10)),
                ('pickup', models.CharField(max_length=500)),
                ('drop', models.CharField(max_length=500)),
                ('booking_datetime', models.DateTimeField(auto_now_add=True)),
                ('ride_start_datetime', models.DateTimeField()),
                ('ride_end_datetime', models.DateTimeField()),
                ('ride_fare', models.FloatField()),
                ('distance', models.FloatField()),
                ('duration', models.FloatField()),
                ('final_ride_fare', models.FloatField()),
                ('ride_status', models.CharField(choices=[('B', 'Booked'), ('O', 'Ongoing'), ('Co', 'Completed'), ('Ca', 'Cancelled')], max_length=2)),
                ('extra_remarks', models.TextField()),
                ('advance_payment_received', models.BooleanField(default=False)),
                ('advance_15', models.BooleanField(default=True)),
                ('assigned_vendors', models.BooleanField(default=False)),
                ('assigned_final_vendor', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'User Bookings',
            },
        ),
        migrations.CreateModel(
            name='ride_types',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('comment', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'verbose_name_plural': 'Ride Types',
            },
        ),
        migrations.CreateModel(
            name='testimonials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='')),
                ('name', models.CharField(max_length=100)),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='vendorbids',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_bid', models.FloatField()),
                ('bid', models.FloatField(blank=True, null=True)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.ride_booking')),
            ],
        ),
        migrations.CreateModel(
            name='ride_choices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('value', models.IntegerField()),
                ('ride_type', models.ManyToManyField(to='core.ride_types')),
            ],
        ),
    ]
